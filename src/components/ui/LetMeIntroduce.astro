---
---

<section class="letmeintroduce">
  <div class="letme-container">
    <img class="letme-hero-image" src="/images/MainImage.webp" alt="Introduction" />
  </div>
</section>

<style is:global>
  .letmeintroduce {
    background: white;
    position: relative;
    width: 100%;
  }

  .letmeintroduce::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      linear-gradient(rgba(0, 0, 0, 0.02) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 0, 0, 0.02) 1px, transparent 1px);
    background-size: 20px 20px;
    pointer-events: none;
    z-index: 1;
  }

  .letme-container {
    max-width: 1280px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: 40px;
    position: relative;
    z-index: 2;
  }

  .letme-title {
    font-family: 'Median', serif;
    font-size: clamp(32px, 4vw, 48px);
    font-weight: 400;
    line-height: 56px;
    color: black;
    text-align: start;
    margin: 0;
  }

  .letme-hero-image {
    width: 100%;
    height: 528px;
    border-radius: 12px;
    object-fit: cover;
  }

  @media (max-width: 768px) {
    .letmeintroduce {
      padding: 3.125rem 1.25rem; /* 50px 20px */
    }

    .letme-container {
      gap: 2.5rem; /* 40px */
    }

    .letme-hero-image {
      height: 18.75rem; /* 300px */
    }
  }
</style>

<script>
  import { scroll } from 'motion';

  // Wait for DOM to be ready
  document.addEventListener('DOMContentLoaded', () => {
    const heroImage = document.querySelector('.letme-hero-image');
    
    if (heroImage) {
      // Create scroll offset animation for hero image
      scroll(
        (progress: number) => {
          const yOffset = progress * 100; 
          (heroImage as HTMLElement).style.transform = `translateY(-${yOffset}px)`;
        },
        {
          target: heroImage,
          offset: ["start end", "end start"]
        }
      );
    }
  });
</script>